{
  "openapi": "3.0.1",
  "info": {
    "title": "Blume Digital Corp. - Identity API",
    "description": "A JWT based user management system to authenticate and manage users, their roles, rights and other user related features for all applications developed and maintained by Blume Digital Corp.",
    "termsOfService": "https://example.com/terms",
    "contact": {
      "name": "Example Contact",
      "url": "https://example.com/contact"
    },
    "license": {
      "name": "Example License",
      "url": "https://example.com/license"
    },
    "version": "v1"
  },
  "paths": {
    "/api/Application": {
      "get": {
        "tags": [
          "Application"
        ],
        "summary": "Retrieves a specific Application Details by unique id",
        "operationId": "Application-Get",
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "description": "Application Id or unique identifier which is the primary key of the application",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Application"
        ],
        "summary": "For adding new application to eco systemmenu",
        "operationId": "Application-Add",
        "requestBody": {
          "description": "Application View Model Object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationInfoModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationInfoModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationInfoModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationInfoModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationInfoModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationInfoModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Application"
        ],
        "summary": "For updating existing application data",
        "operationId": "Application-Update",
        "requestBody": {
          "description": "Application View Model Object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationInfoModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationInfoModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationInfoModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationInfoModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationInfoModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationInfoModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Application"
        ],
        "summary": "For retiring an existing application",
        "operationId": "Application-Delete",
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "description": "Application Id or unique identifier which is the primary key of the application",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Application/GetAll": {
      "get": {
        "tags": [
          "Application"
        ],
        "summary": "Get collection of all applications",
        "operationId": "Application-GetAll",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/PagedApplications": {
      "get": {
        "tags": [
          "Application"
        ],
        "summary": "For retrieving application list in paginated form",
        "operationId": "Application-GetPaged",
        "parameters": [
          {
            "name": "SearchString",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OrganizationId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SourceData",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ApplicationInfoModel"
              }
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageLength",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "TotalItems",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "HasCreateAccess",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "HasUpdateAccess",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "HasDeleteAccess",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Auth/LogIn": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Authenticates users",
        "operationId": "Auth-LogIn",
        "requestBody": {
          "description": "User View Model Object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Employee/{orgId}": {
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Register new/existing users to organization as employee",
        "operationId": "Employee-Register",
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "description": "Unique Identifier/Primary Key of the Organization that the user is going to be employed at",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Application Id or unique identifier which is the primary key of the application",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Employee/Paged/{orgId}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "",
        "operationId": "Employee-GetPaged",
        "parameters": [
          {
            "name": "SearchString",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OrganizationId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SourceData",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UserModel"
              }
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageLength",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "TotalItems",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "HasCreateAccess",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "HasUpdateAccess",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "HasDeleteAccess",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Employee/UpdateEmployeeRoles/{orgId}": {
      "put": {
        "tags": [
          "Employee"
        ],
        "summary": "Manage roles of employees",
        "operationId": "Employee-UpdateEmployeeRoles",
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Employee/{orgId}/{userId}": {
      "delete": {
        "tags": [
          "Employee"
        ],
        "summary": "Release an employee from an organization you own or are an admin of",
        "operationId": "Employee-ReleaseEmployee",
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Employee/AdminOrg": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get list of organizations the logged, in user has admin access to",
        "operationId": "Employee-AdminOf",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Onboarding/Redbook": {
      "post": {
        "tags": [
          "Onboarding"
        ],
        "operationId": "Onboarding-RedbookOnboarding",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OnboardingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OnboardingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OnboardingModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/OnboardingModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/OnboardingModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/OnboardingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Organization/{orgId}": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Get organization details by organization Id",
        "operationId": "Organization-Get",
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "description": "Organization Id or unique identifier which is the primary key of organization table",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "delete": {
        "tags": [
          "Organization"
        ],
        "summary": "Delete existing organization with details",
        "operationId": "Organization-Delete",
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "description": "Organization Id or unique identifier which is the primary key of organization table",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Organization/Owned": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Get all organizations owned by user",
        "operationId": "Organization-GetAll",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Organization": {
      "post": {
        "tags": [
          "Organization"
        ],
        "summary": "Add new organization with details",
        "operationId": "Organization-Add",
        "requestBody": {
          "description": "Organization details object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Organization"
        ],
        "summary": "Update existing organization with details",
        "operationId": "Organization-Update",
        "requestBody": {
          "description": "Organization details object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Organization/PagedOrganizations": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Get Paginated collection of organizations",
        "operationId": "Organization-GetPaged",
        "parameters": [
          {
            "name": "SearchString",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OrganizationId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SourceData",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/OrganizationModel"
              }
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageLength",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "TotalItems",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "HasCreateAccess",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "HasUpdateAccess",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "HasDeleteAccess",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Role": {
      "post": {
        "tags": [
          "Role"
        ],
        "operationId": "Role-AddRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RoleModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RoleModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/RoleModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Role"
        ],
        "operationId": "Role-UpdateRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RoleModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RoleModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/RoleModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Role/{roleId}": {
      "delete": {
        "tags": [
          "Role"
        ],
        "summary": "Remove roles by Role Id",
        "operationId": "Role-RemoveRole",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Role/Organization/{orgId}": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Returns roles by Organization Id",
        "operationId": "Role-GetByOrg",
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/AllowRouteForRole/{roleId}/{routeId}": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Map role with route for permission",
        "operationId": "Role-MapRoleRoute",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "routeId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/GetAllowedOrganizationsToUserByRoute/{userId}/{routeId}": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Map role with route for permission",
        "operationId": "Role-GetOrganizationsAllowedToUserByRoute",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "routeId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Route/GetPaged": {
      "get": {
        "tags": [
          "Route"
        ],
        "summary": "Paginated list of application routes (System Admin User Only)",
        "operationId": "Route-GetPaged",
        "parameters": [
          {
            "name": "SearchString",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OrganizationId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SourceData",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RouteModel"
              }
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageLength",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "TotalItems",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "HasCreateAccess",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "HasUpdateAccess",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "HasDeleteAccess",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Route/App": {
      "get": {
        "tags": [
          "Route"
        ],
        "summary": "Returns all routes of specified application",
        "operationId": "Route-GetAll",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Route/Menu": {
      "get": {
        "tags": [
          "Route"
        ],
        "summary": "Returns allowed menu routes of requesting user",
        "operationId": "Route-GetMenu",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Route/GetDetails/{routeId}": {
      "get": {
        "tags": [
          "Route"
        ],
        "summary": "Returns detailed info of route identified by id provided",
        "operationId": "Route-Get",
        "parameters": [
          {
            "name": "routeId",
            "in": "path",
            "description": "User unique identifierSystem.Int32.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Route/Role/{roleId}": {
      "get": {
        "tags": [
          "Route"
        ],
        "summary": "Returns collection of Routes allowed to dole by role id",
        "operationId": "Route-GetRoutesByRoleId",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "User unique identifierSystem.Int32.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Route": {
      "post": {
        "tags": [
          "Route"
        ],
        "summary": "Add new route to specified application",
        "operationId": "Route-Add",
        "requestBody": {
          "description": "User unique identifierIdentity.Data.Models.RouteModel.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RouteModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RouteModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RouteModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RouteModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RouteModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/RouteModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Route"
        ],
        "summary": "Updates existing route information",
        "operationId": "Route-Update",
        "requestBody": {
          "description": "User unique identifierIdentity.Data.Models.RouteModel.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RouteModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RouteModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RouteModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RouteModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/RouteModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/RouteModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Route/Types": {
      "get": {
        "tags": [
          "Route"
        ],
        "operationId": "Route-GetAllRouteTypes",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Route/{routeId}": {
      "delete": {
        "tags": [
          "Route"
        ],
        "summary": "Permanantly deletes route specified",
        "operationId": "Route-Delete",
        "parameters": [
          {
            "name": "routeId",
            "in": "path",
            "description": "User unique identifierSystem.Int32.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/Archive/{userId}": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Archive own account only. User may join a different organization under redbook, thus organization admins should not hold the right to archive an user.",
        "operationId": "User-ArchiveAccount",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "User unique identifierSystem.Int32.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/Unarchive/{id}": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Unarchive own account or an user under own organization (admin user only)",
        "operationId": "User-UnArchiveAccount",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "Application Id or unique identifier which is the primary key of the application",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/{id}": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Permanantly delete user information (system admin user only)",
        "operationId": "User-Delete",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "Application Id or unique identifier which is the primary key of the application",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/ResetPassword/{id}": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Reset own or user password (system admin user only)",
        "operationId": "User-ResetPassword",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "Application Id or unique identifier which is the primary key of the application",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update own user information",
        "operationId": "User-Update",
        "requestBody": {
          "description": "User details objectIdentity.Data.Models.UserModelUpdated User Data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/UserModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/Business": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get list of organizations that the user is related to",
        "operationId": "User-GetUserOrgs",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/{orgId}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Retrieves a paged list of users associated with the specified organization. (Organization admin access only)",
        "operationId": "User-GetUserByBusiness",
        "parameters": [
          {
            "name": "SearchString",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OrganizationId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SortBy",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SourceData",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UserModel"
              }
            }
          },
          {
            "name": "PageNumber",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageLength",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "TotalItems",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "HasCreateAccess",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "HasUpdateAccess",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "HasDeleteAccess",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "orgId",
            "in": "path",
            "description": "The ID of the organization to retrieve users for.",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApplicationInfoModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "applicationName": {
            "type": "string",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OnboardingModel": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserModel"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationModel"
          }
        },
        "additionalProperties": false
      },
      "OrganizationModel": {
        "type": "object",
        "properties": {
          "organizationId": {
            "type": "integer",
            "format": "int32"
          },
          "organizationName": {
            "type": "string",
            "nullable": true
          },
          "organizationAddress": {
            "type": "string",
            "nullable": true
          },
          "businessLogo": {
            "type": "string",
            "nullable": true
          },
          "subscriptionFee": {
            "type": "number",
            "format": "float"
          }
        },
        "additionalProperties": false
      },
      "RoleModel": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "integer",
            "format": "int32"
          },
          "roleName": {
            "type": "string",
            "nullable": true
          },
          "organizationId": {
            "type": "integer",
            "format": "int32"
          },
          "isAdmin": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "RouteModel": {
        "type": "object",
        "properties": {
          "routeId": {
            "type": "integer",
            "format": "int32"
          },
          "routeName": {
            "type": "string",
            "nullable": true
          },
          "routeValue": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "sequence": {
            "type": "integer",
            "format": "int32"
          },
          "parentRouteId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "routeTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "isMenuRoute": {
            "type": "boolean"
          },
          "applicationName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "profilePicLoc": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "userRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleModel"
            },
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "accountBalance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "rememberMe": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Format: Bearer {access_token}",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}